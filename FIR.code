module FIR_Filter (
    input clk,
    input rst,
    input signed [7:0] x_in,           // 8-bit signed input
    output reg signed [15:0] y_out     // 16-bit signed output
);

    // Filter coefficients (example): h0=1, h1=2, h2=3
    parameter signed [7:0] h0 = 8'd1;
    parameter signed [7:0] h1 = 8'd2;
    parameter signed [7:0] h2 = 8'd3;

    reg signed [7:0] x1, x2; // Delay registers for x[n-1], x[n-2]

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            x1 <= 0; x2 <= 0; y_out <= 0;
        end else begin
            // Shift previous inputs
            x2 <= x1;
            x1 <= x_in;

            // FIR Filter Equation: y[n] = h0*x[n] + h1*x[n-1] + h2*x[n-2]
            y_out <= (h0 * x_in) + (h1 * x1) + (h2 * x2);
        end
    end

endmodule
